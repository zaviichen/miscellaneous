// Generated by ProtoGen, Version=2.4.1.521, Culture=neutral, PublicKeyToken=55f7125234beb589.  DO NOT EDIT!
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.ProtocolBuffers;
using pbc = global::Google.ProtocolBuffers.Collections;
using pbd = global::Google.ProtocolBuffers.Descriptors;
using scg = global::System.Collections.Generic;
namespace Tdx {
  
  namespace Proto {
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public static partial class OrderStatus {
    
      #region Extension registration
      public static void RegisterAllExtensions(pb::ExtensionRegistry registry) {
      }
      #endregion
      #region Static variables
      internal static pbd::MessageDescriptor internal__static_common_OrderStatus__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::Tdx.OrderStatus, global::Tdx.OrderStatus.Builder> internal__static_common_OrderStatus__FieldAccessorTable;
      #endregion
      #region Descriptor
      public static pbd::FileDescriptor Descriptor {
        get { return descriptor; }
      }
      private static pbd::FileDescriptor descriptor;
      
      static OrderStatus() {
        byte[] descriptorData = global::System.Convert.FromBase64String(
            "ChJvcmRlcl9zdGF0dXMucHJvdG8SBmNvbW1vbiL+AwoLT3JkZXJTdGF0dXMS" + 
            "CgoCaWQYASACKAMSMQoKcnNwX3N0YXR1cxgCIAIoDjIdLmNvbW1vbi5PcmRl" + 
            "clN0YXR1cy5Sc3BTdGF0dXMSKgoGc3RhdHVzGAMgASgOMhouY29tbW9uLk9y" + 
            "ZGVyU3RhdHVzLlN0YXR1cxIOCgZmaWxsZWQYBCABKAMSEQoJcmVtYWluaW5n" + 
            "GAUgASgDEhYKDmF2Z19maWxsX3ByaWNlGAYgASgBEhcKD2xhc3RfZmlsbF9w" + 
            "cmljZRgHIAEoARIPCgdwZXJtX2lkGAggASgDEhEKCXBhcmVudF9pZBgJIAEo" + 
            "AxIRCgljbGllbnRfaWQYCiABKAMSEAoId2h5X2hlbGQYCyABKAkSEgoKZXJy" + 
            "b3JfY29kZRgMIAEoBRIRCgllcnJvcl9tc2cYDSABKAkSEwoLdXBkYXRlX3Rp" + 
            "bWUYDiABKAMiIwoJUnNwU3RhdHVzEgsKB1NVQ0NFU1MQARIJCgVFUlJPUhAC" + 
            "IoUBCgZTdGF0dXMSEQoNUGVuZGluZ1N1Ym1pdBABEhEKDVBlbmRpbmdDYW5j" + 
            "ZWwQAhIQCgxQcmVTdWJtaXR0ZWQQAxINCglTdWJtaXR0ZWQQBBINCglDYW5j" + 
            "ZWxsZWQQBRIKCgZGaWxsZWQQBhIMCghJbmFjdGl2ZRAHEgsKB1Vua25vd24Q" + 
            "CEIhCgxjb21tb24ucHJvdG9CEU9yZGVyU3RhdHVzUHJvdG9z");
        pbd::FileDescriptor.InternalDescriptorAssigner assigner = delegate(pbd::FileDescriptor root) {
          descriptor = root;
          internal__static_common_OrderStatus__Descriptor = Descriptor.MessageTypes[0];
          internal__static_common_OrderStatus__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::Tdx.OrderStatus, global::Tdx.OrderStatus.Builder>(internal__static_common_OrderStatus__Descriptor,
                  new string[] { "Id", "RspStatus", "Status", "Filled", "Remaining", "AvgFillPrice", "LastFillPrice", "PermId", "ParentId", "ClientId", "WhyHeld", "ErrorCode", "ErrorMsg", "UpdateTime", });
          return null;
        };
        pbd::FileDescriptor.InternalBuildGeneratedFileFrom(descriptorData,
            new pbd::FileDescriptor[] {
            }, assigner);
      }
      #endregion
      
    }
  }
  #region Messages
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class OrderStatus : pb::GeneratedMessage<OrderStatus, OrderStatus.Builder> {
    private OrderStatus() { }
    private static readonly OrderStatus defaultInstance = new OrderStatus().MakeReadOnly();
    private static readonly string[] _orderStatusFieldNames = new string[] { "avg_fill_price", "client_id", "error_code", "error_msg", "filled", "id", "last_fill_price", "parent_id", "perm_id", "remaining", "rsp_status", "status", "update_time", "why_held" };
    private static readonly uint[] _orderStatusFieldTags = new uint[] { 49, 80, 96, 106, 32, 8, 57, 72, 64, 40, 16, 24, 112, 90 };
    public static OrderStatus DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override OrderStatus DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override OrderStatus ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::Tdx.Proto.OrderStatus.internal__static_common_OrderStatus__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<OrderStatus, OrderStatus.Builder> InternalFieldAccessors {
      get { return global::Tdx.Proto.OrderStatus.internal__static_common_OrderStatus__FieldAccessorTable; }
    }
    
    #region Nested types
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public static partial class Types {
      public enum RspStatus {
        SUCCESS = 1,
        ERROR = 2,
      }
      
      public enum Status {
        PendingSubmit = 1,
        PendingCancel = 2,
        PreSubmitted = 3,
        Submitted = 4,
        Cancelled = 5,
        Filled = 6,
        Inactive = 7,
        Unknown = 8,
      }
      
    }
    #endregion
    
    public const int IdFieldNumber = 1;
    private bool hasId;
    private long id_;
    public bool HasId {
      get { return hasId; }
    }
    public long Id {
      get { return id_; }
    }
    
    public const int RspStatusFieldNumber = 2;
    private bool hasRspStatus;
    private global::Tdx.OrderStatus.Types.RspStatus rspStatus_ = global::Tdx.OrderStatus.Types.RspStatus.SUCCESS;
    public bool HasRspStatus {
      get { return hasRspStatus; }
    }
    public global::Tdx.OrderStatus.Types.RspStatus RspStatus {
      get { return rspStatus_; }
    }
    
    public const int StatusFieldNumber = 3;
    private bool hasStatus;
    private global::Tdx.OrderStatus.Types.Status status_ = global::Tdx.OrderStatus.Types.Status.PendingSubmit;
    public bool HasStatus {
      get { return hasStatus; }
    }
    public global::Tdx.OrderStatus.Types.Status Status {
      get { return status_; }
    }
    
    public const int FilledFieldNumber = 4;
    private bool hasFilled;
    private long filled_;
    public bool HasFilled {
      get { return hasFilled; }
    }
    public long Filled {
      get { return filled_; }
    }
    
    public const int RemainingFieldNumber = 5;
    private bool hasRemaining;
    private long remaining_;
    public bool HasRemaining {
      get { return hasRemaining; }
    }
    public long Remaining {
      get { return remaining_; }
    }
    
    public const int AvgFillPriceFieldNumber = 6;
    private bool hasAvgFillPrice;
    private double avgFillPrice_;
    public bool HasAvgFillPrice {
      get { return hasAvgFillPrice; }
    }
    public double AvgFillPrice {
      get { return avgFillPrice_; }
    }
    
    public const int LastFillPriceFieldNumber = 7;
    private bool hasLastFillPrice;
    private double lastFillPrice_;
    public bool HasLastFillPrice {
      get { return hasLastFillPrice; }
    }
    public double LastFillPrice {
      get { return lastFillPrice_; }
    }
    
    public const int PermIdFieldNumber = 8;
    private bool hasPermId;
    private long permId_;
    public bool HasPermId {
      get { return hasPermId; }
    }
    public long PermId {
      get { return permId_; }
    }
    
    public const int ParentIdFieldNumber = 9;
    private bool hasParentId;
    private long parentId_;
    public bool HasParentId {
      get { return hasParentId; }
    }
    public long ParentId {
      get { return parentId_; }
    }
    
    public const int ClientIdFieldNumber = 10;
    private bool hasClientId;
    private long clientId_;
    public bool HasClientId {
      get { return hasClientId; }
    }
    public long ClientId {
      get { return clientId_; }
    }
    
    public const int WhyHeldFieldNumber = 11;
    private bool hasWhyHeld;
    private string whyHeld_ = "";
    public bool HasWhyHeld {
      get { return hasWhyHeld; }
    }
    public string WhyHeld {
      get { return whyHeld_; }
    }
    
    public const int ErrorCodeFieldNumber = 12;
    private bool hasErrorCode;
    private int errorCode_;
    public bool HasErrorCode {
      get { return hasErrorCode; }
    }
    public int ErrorCode {
      get { return errorCode_; }
    }
    
    public const int ErrorMsgFieldNumber = 13;
    private bool hasErrorMsg;
    private string errorMsg_ = "";
    public bool HasErrorMsg {
      get { return hasErrorMsg; }
    }
    public string ErrorMsg {
      get { return errorMsg_; }
    }
    
    public const int UpdateTimeFieldNumber = 14;
    private bool hasUpdateTime;
    private long updateTime_;
    public bool HasUpdateTime {
      get { return hasUpdateTime; }
    }
    public long UpdateTime {
      get { return updateTime_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasId) return false;
        if (!hasRspStatus) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _orderStatusFieldNames;
      if (hasId) {
        output.WriteInt64(1, field_names[5], Id);
      }
      if (hasRspStatus) {
        output.WriteEnum(2, field_names[10], (int) RspStatus, RspStatus);
      }
      if (hasStatus) {
        output.WriteEnum(3, field_names[11], (int) Status, Status);
      }
      if (hasFilled) {
        output.WriteInt64(4, field_names[4], Filled);
      }
      if (hasRemaining) {
        output.WriteInt64(5, field_names[9], Remaining);
      }
      if (hasAvgFillPrice) {
        output.WriteDouble(6, field_names[0], AvgFillPrice);
      }
      if (hasLastFillPrice) {
        output.WriteDouble(7, field_names[6], LastFillPrice);
      }
      if (hasPermId) {
        output.WriteInt64(8, field_names[8], PermId);
      }
      if (hasParentId) {
        output.WriteInt64(9, field_names[7], ParentId);
      }
      if (hasClientId) {
        output.WriteInt64(10, field_names[1], ClientId);
      }
      if (hasWhyHeld) {
        output.WriteString(11, field_names[13], WhyHeld);
      }
      if (hasErrorCode) {
        output.WriteInt32(12, field_names[2], ErrorCode);
      }
      if (hasErrorMsg) {
        output.WriteString(13, field_names[3], ErrorMsg);
      }
      if (hasUpdateTime) {
        output.WriteInt64(14, field_names[12], UpdateTime);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasId) {
          size += pb::CodedOutputStream.ComputeInt64Size(1, Id);
        }
        if (hasRspStatus) {
          size += pb::CodedOutputStream.ComputeEnumSize(2, (int) RspStatus);
        }
        if (hasStatus) {
          size += pb::CodedOutputStream.ComputeEnumSize(3, (int) Status);
        }
        if (hasFilled) {
          size += pb::CodedOutputStream.ComputeInt64Size(4, Filled);
        }
        if (hasRemaining) {
          size += pb::CodedOutputStream.ComputeInt64Size(5, Remaining);
        }
        if (hasAvgFillPrice) {
          size += pb::CodedOutputStream.ComputeDoubleSize(6, AvgFillPrice);
        }
        if (hasLastFillPrice) {
          size += pb::CodedOutputStream.ComputeDoubleSize(7, LastFillPrice);
        }
        if (hasPermId) {
          size += pb::CodedOutputStream.ComputeInt64Size(8, PermId);
        }
        if (hasParentId) {
          size += pb::CodedOutputStream.ComputeInt64Size(9, ParentId);
        }
        if (hasClientId) {
          size += pb::CodedOutputStream.ComputeInt64Size(10, ClientId);
        }
        if (hasWhyHeld) {
          size += pb::CodedOutputStream.ComputeStringSize(11, WhyHeld);
        }
        if (hasErrorCode) {
          size += pb::CodedOutputStream.ComputeInt32Size(12, ErrorCode);
        }
        if (hasErrorMsg) {
          size += pb::CodedOutputStream.ComputeStringSize(13, ErrorMsg);
        }
        if (hasUpdateTime) {
          size += pb::CodedOutputStream.ComputeInt64Size(14, UpdateTime);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static OrderStatus ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static OrderStatus ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static OrderStatus ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static OrderStatus ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static OrderStatus ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static OrderStatus ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static OrderStatus ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static OrderStatus ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static OrderStatus ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static OrderStatus ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private OrderStatus MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(OrderStatus prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<OrderStatus, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(OrderStatus cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private OrderStatus result;
      
      private OrderStatus PrepareBuilder() {
        if (resultIsReadOnly) {
          OrderStatus original = result;
          result = new OrderStatus();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override OrderStatus MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::Tdx.OrderStatus.Descriptor; }
      }
      
      public override OrderStatus DefaultInstanceForType {
        get { return global::Tdx.OrderStatus.DefaultInstance; }
      }
      
      public override OrderStatus BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is OrderStatus) {
          return MergeFrom((OrderStatus) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(OrderStatus other) {
        if (other == global::Tdx.OrderStatus.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasId) {
          Id = other.Id;
        }
        if (other.HasRspStatus) {
          RspStatus = other.RspStatus;
        }
        if (other.HasStatus) {
          Status = other.Status;
        }
        if (other.HasFilled) {
          Filled = other.Filled;
        }
        if (other.HasRemaining) {
          Remaining = other.Remaining;
        }
        if (other.HasAvgFillPrice) {
          AvgFillPrice = other.AvgFillPrice;
        }
        if (other.HasLastFillPrice) {
          LastFillPrice = other.LastFillPrice;
        }
        if (other.HasPermId) {
          PermId = other.PermId;
        }
        if (other.HasParentId) {
          ParentId = other.ParentId;
        }
        if (other.HasClientId) {
          ClientId = other.ClientId;
        }
        if (other.HasWhyHeld) {
          WhyHeld = other.WhyHeld;
        }
        if (other.HasErrorCode) {
          ErrorCode = other.ErrorCode;
        }
        if (other.HasErrorMsg) {
          ErrorMsg = other.ErrorMsg;
        }
        if (other.HasUpdateTime) {
          UpdateTime = other.UpdateTime;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_orderStatusFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _orderStatusFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasId = input.ReadInt64(ref result.id_);
              break;
            }
            case 16: {
              object unknown;
              if(input.ReadEnum(ref result.rspStatus_, out unknown)) {
                result.hasRspStatus = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(2, (ulong)(int)unknown);
              }
              break;
            }
            case 24: {
              object unknown;
              if(input.ReadEnum(ref result.status_, out unknown)) {
                result.hasStatus = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(3, (ulong)(int)unknown);
              }
              break;
            }
            case 32: {
              result.hasFilled = input.ReadInt64(ref result.filled_);
              break;
            }
            case 40: {
              result.hasRemaining = input.ReadInt64(ref result.remaining_);
              break;
            }
            case 49: {
              result.hasAvgFillPrice = input.ReadDouble(ref result.avgFillPrice_);
              break;
            }
            case 57: {
              result.hasLastFillPrice = input.ReadDouble(ref result.lastFillPrice_);
              break;
            }
            case 64: {
              result.hasPermId = input.ReadInt64(ref result.permId_);
              break;
            }
            case 72: {
              result.hasParentId = input.ReadInt64(ref result.parentId_);
              break;
            }
            case 80: {
              result.hasClientId = input.ReadInt64(ref result.clientId_);
              break;
            }
            case 90: {
              result.hasWhyHeld = input.ReadString(ref result.whyHeld_);
              break;
            }
            case 96: {
              result.hasErrorCode = input.ReadInt32(ref result.errorCode_);
              break;
            }
            case 106: {
              result.hasErrorMsg = input.ReadString(ref result.errorMsg_);
              break;
            }
            case 112: {
              result.hasUpdateTime = input.ReadInt64(ref result.updateTime_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasId {
        get { return result.hasId; }
      }
      public long Id {
        get { return result.Id; }
        set { SetId(value); }
      }
      public Builder SetId(long value) {
        PrepareBuilder();
        result.hasId = true;
        result.id_ = value;
        return this;
      }
      public Builder ClearId() {
        PrepareBuilder();
        result.hasId = false;
        result.id_ = 0L;
        return this;
      }
      
      public bool HasRspStatus {
       get { return result.hasRspStatus; }
      }
      public global::Tdx.OrderStatus.Types.RspStatus RspStatus {
        get { return result.RspStatus; }
        set { SetRspStatus(value); }
      }
      public Builder SetRspStatus(global::Tdx.OrderStatus.Types.RspStatus value) {
        PrepareBuilder();
        result.hasRspStatus = true;
        result.rspStatus_ = value;
        return this;
      }
      public Builder ClearRspStatus() {
        PrepareBuilder();
        result.hasRspStatus = false;
        result.rspStatus_ = global::Tdx.OrderStatus.Types.RspStatus.SUCCESS;
        return this;
      }
      
      public bool HasStatus {
       get { return result.hasStatus; }
      }
      public global::Tdx.OrderStatus.Types.Status Status {
        get { return result.Status; }
        set { SetStatus(value); }
      }
      public Builder SetStatus(global::Tdx.OrderStatus.Types.Status value) {
        PrepareBuilder();
        result.hasStatus = true;
        result.status_ = value;
        return this;
      }
      public Builder ClearStatus() {
        PrepareBuilder();
        result.hasStatus = false;
        result.status_ = global::Tdx.OrderStatus.Types.Status.PendingSubmit;
        return this;
      }
      
      public bool HasFilled {
        get { return result.hasFilled; }
      }
      public long Filled {
        get { return result.Filled; }
        set { SetFilled(value); }
      }
      public Builder SetFilled(long value) {
        PrepareBuilder();
        result.hasFilled = true;
        result.filled_ = value;
        return this;
      }
      public Builder ClearFilled() {
        PrepareBuilder();
        result.hasFilled = false;
        result.filled_ = 0L;
        return this;
      }
      
      public bool HasRemaining {
        get { return result.hasRemaining; }
      }
      public long Remaining {
        get { return result.Remaining; }
        set { SetRemaining(value); }
      }
      public Builder SetRemaining(long value) {
        PrepareBuilder();
        result.hasRemaining = true;
        result.remaining_ = value;
        return this;
      }
      public Builder ClearRemaining() {
        PrepareBuilder();
        result.hasRemaining = false;
        result.remaining_ = 0L;
        return this;
      }
      
      public bool HasAvgFillPrice {
        get { return result.hasAvgFillPrice; }
      }
      public double AvgFillPrice {
        get { return result.AvgFillPrice; }
        set { SetAvgFillPrice(value); }
      }
      public Builder SetAvgFillPrice(double value) {
        PrepareBuilder();
        result.hasAvgFillPrice = true;
        result.avgFillPrice_ = value;
        return this;
      }
      public Builder ClearAvgFillPrice() {
        PrepareBuilder();
        result.hasAvgFillPrice = false;
        result.avgFillPrice_ = 0D;
        return this;
      }
      
      public bool HasLastFillPrice {
        get { return result.hasLastFillPrice; }
      }
      public double LastFillPrice {
        get { return result.LastFillPrice; }
        set { SetLastFillPrice(value); }
      }
      public Builder SetLastFillPrice(double value) {
        PrepareBuilder();
        result.hasLastFillPrice = true;
        result.lastFillPrice_ = value;
        return this;
      }
      public Builder ClearLastFillPrice() {
        PrepareBuilder();
        result.hasLastFillPrice = false;
        result.lastFillPrice_ = 0D;
        return this;
      }
      
      public bool HasPermId {
        get { return result.hasPermId; }
      }
      public long PermId {
        get { return result.PermId; }
        set { SetPermId(value); }
      }
      public Builder SetPermId(long value) {
        PrepareBuilder();
        result.hasPermId = true;
        result.permId_ = value;
        return this;
      }
      public Builder ClearPermId() {
        PrepareBuilder();
        result.hasPermId = false;
        result.permId_ = 0L;
        return this;
      }
      
      public bool HasParentId {
        get { return result.hasParentId; }
      }
      public long ParentId {
        get { return result.ParentId; }
        set { SetParentId(value); }
      }
      public Builder SetParentId(long value) {
        PrepareBuilder();
        result.hasParentId = true;
        result.parentId_ = value;
        return this;
      }
      public Builder ClearParentId() {
        PrepareBuilder();
        result.hasParentId = false;
        result.parentId_ = 0L;
        return this;
      }
      
      public bool HasClientId {
        get { return result.hasClientId; }
      }
      public long ClientId {
        get { return result.ClientId; }
        set { SetClientId(value); }
      }
      public Builder SetClientId(long value) {
        PrepareBuilder();
        result.hasClientId = true;
        result.clientId_ = value;
        return this;
      }
      public Builder ClearClientId() {
        PrepareBuilder();
        result.hasClientId = false;
        result.clientId_ = 0L;
        return this;
      }
      
      public bool HasWhyHeld {
        get { return result.hasWhyHeld; }
      }
      public string WhyHeld {
        get { return result.WhyHeld; }
        set { SetWhyHeld(value); }
      }
      public Builder SetWhyHeld(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasWhyHeld = true;
        result.whyHeld_ = value;
        return this;
      }
      public Builder ClearWhyHeld() {
        PrepareBuilder();
        result.hasWhyHeld = false;
        result.whyHeld_ = "";
        return this;
      }
      
      public bool HasErrorCode {
        get { return result.hasErrorCode; }
      }
      public int ErrorCode {
        get { return result.ErrorCode; }
        set { SetErrorCode(value); }
      }
      public Builder SetErrorCode(int value) {
        PrepareBuilder();
        result.hasErrorCode = true;
        result.errorCode_ = value;
        return this;
      }
      public Builder ClearErrorCode() {
        PrepareBuilder();
        result.hasErrorCode = false;
        result.errorCode_ = 0;
        return this;
      }
      
      public bool HasErrorMsg {
        get { return result.hasErrorMsg; }
      }
      public string ErrorMsg {
        get { return result.ErrorMsg; }
        set { SetErrorMsg(value); }
      }
      public Builder SetErrorMsg(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasErrorMsg = true;
        result.errorMsg_ = value;
        return this;
      }
      public Builder ClearErrorMsg() {
        PrepareBuilder();
        result.hasErrorMsg = false;
        result.errorMsg_ = "";
        return this;
      }
      
      public bool HasUpdateTime {
        get { return result.hasUpdateTime; }
      }
      public long UpdateTime {
        get { return result.UpdateTime; }
        set { SetUpdateTime(value); }
      }
      public Builder SetUpdateTime(long value) {
        PrepareBuilder();
        result.hasUpdateTime = true;
        result.updateTime_ = value;
        return this;
      }
      public Builder ClearUpdateTime() {
        PrepareBuilder();
        result.hasUpdateTime = false;
        result.updateTime_ = 0L;
        return this;
      }
    }
    static OrderStatus() {
      object.ReferenceEquals(global::Tdx.Proto.OrderStatus.Descriptor, null);
    }
  }
  
  #endregion
  
}

#endregion Designer generated code
